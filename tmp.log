[2019-04-13 13:17:38,813] INFO - start
[2019-04-13 13:17:42,631] INFO - ('using tensorflow: ', '2.0.0-alpha0')
[2019-04-13 13:17:42,631] INFO - Positional Encoding
[2019-04-13 13:17:42,675] INFO - (1, 50, 512)
[2019-04-13 13:17:42,675] INFO - 




[2019-04-13 13:17:42,675] INFO - padding mask
[2019-04-13 13:17:42,681] INFO - tf.Tensor(
[[[[0. 0. 1. 1. 0.]]]


 [[[0. 0. 0. 1. 1.]]]


 [[[1. 1. 1. 0. 0.]]]], shape=(3, 1, 1, 5), dtype=float32)
[2019-04-13 13:17:42,684] INFO - 




[2019-04-13 13:17:42,688] INFO - look aheadmask
[2019-04-13 13:17:42,690] INFO - tf.Tensor(
[[0. 1. 1.]
 [0. 0. 1.]
 [0. 0. 0.]], shape=(3, 3), dtype=float32)
[2019-04-13 13:17:42,691] INFO - 




[2019-04-13 13:17:42,691] INFO - scaled dot product attention
[2019-04-13 13:17:42,704] INFO - Attention weights are:
[2019-04-13 13:17:42,704] INFO - tf.Tensor([[0. 1. 0. 0.]], shape=(1, 4), dtype=float32)
[2019-04-13 13:17:42,706] INFO - Output is:
[2019-04-13 13:17:42,707] INFO - tf.Tensor([[10.  0.]], shape=(1, 2), dtype=float32)
[2019-04-13 13:17:42,708] INFO - END




[2019-04-13 13:17:42,708] INFO - Multihead attention
[2019-04-13 13:17:42,791] INFO - (TensorShape([1, 60, 512]), TensorShape([1, 8, 60, 60]))
[2019-04-13 13:17:42,791] INFO - END




[2019-04-13 13:17:42,792] INFO - Point wise forward network
[2019-04-13 13:17:43,254] INFO - (64, 50, 512)
[2019-04-13 13:17:43,255] INFO - END




[2019-04-13 13:17:43,256] INFO - Test Transformer
[2019-04-13 13:21:20,722] INFO - start
[2019-04-13 13:21:22,633] INFO - ('using tensorflow: ', '2.0.0-alpha0')
[2019-04-13 13:21:22,634] INFO - Positional Encoding
[2019-04-13 13:21:22,673] INFO - (1, 50, 512)
[2019-04-13 13:21:22,673] INFO - 




[2019-04-13 13:21:22,673] INFO - padding mask
[2019-04-13 13:21:22,678] INFO - tf.Tensor(
[[[[0. 0. 1. 1. 0.]]]


 [[[0. 0. 0. 1. 1.]]]


 [[[1. 1. 1. 0. 0.]]]], shape=(3, 1, 1, 5), dtype=float32)
[2019-04-13 13:21:22,681] INFO - 




[2019-04-13 13:21:22,683] INFO - look aheadmask
[2019-04-13 13:21:22,687] INFO - tf.Tensor(
[[0. 1. 1.]
 [0. 0. 1.]
 [0. 0. 0.]], shape=(3, 3), dtype=float32)
[2019-04-13 13:21:22,689] INFO - 




[2019-04-13 13:21:22,689] INFO - scaled dot product attention
[2019-04-13 13:21:22,699] INFO - Attention weights are:
[2019-04-13 13:21:22,699] INFO - tf.Tensor([[0. 1. 0. 0.]], shape=(1, 4), dtype=float32)
[2019-04-13 13:21:22,699] INFO - Output is:
[2019-04-13 13:21:22,700] INFO - tf.Tensor([[10.  0.]], shape=(1, 2), dtype=float32)
[2019-04-13 13:21:22,700] INFO - END




[2019-04-13 13:21:22,700] INFO - Multihead attention
[2019-04-13 13:21:22,790] INFO - (TensorShape([1, 60, 512]), TensorShape([1, 8, 60, 60]))
[2019-04-13 13:21:22,790] INFO - END




[2019-04-13 13:21:22,790] INFO - Point wise forward network
[2019-04-13 13:21:23,013] INFO - (64, 50, 512)
[2019-04-13 13:21:23,013] INFO - END




[2019-04-13 13:21:23,013] INFO - Test Transformer
[2019-04-13 13:22:08,736] INFO - start
[2019-04-13 13:22:11,918] INFO - ('using tensorflow: ', '2.0.0-alpha0')
[2019-04-13 13:22:11,918] INFO - Positional Encoding
[2019-04-13 13:22:11,935] INFO - (1, 50, 512)
[2019-04-13 13:22:11,935] INFO - 




[2019-04-13 13:22:11,935] INFO - padding mask
[2019-04-13 13:22:11,936] INFO - tf.Tensor(
[[[[0. 0. 1. 1. 0.]]]


 [[[0. 0. 0. 1. 1.]]]


 [[[1. 1. 1. 0. 0.]]]], shape=(3, 1, 1, 5), dtype=float32)
[2019-04-13 13:22:11,939] INFO - 




[2019-04-13 13:22:11,942] INFO - look aheadmask
[2019-04-13 13:22:11,943] INFO - tf.Tensor(
[[0. 1. 1.]
 [0. 0. 1.]
 [0. 0. 0.]], shape=(3, 3), dtype=float32)
[2019-04-13 13:22:11,944] INFO - 




[2019-04-13 13:22:11,944] INFO - scaled dot product attention
[2019-04-13 13:22:11,945] INFO - Attention weights are:
[2019-04-13 13:22:11,945] INFO - tf.Tensor([[0. 1. 0. 0.]], shape=(1, 4), dtype=float32)
[2019-04-13 13:22:11,946] INFO - Output is:
[2019-04-13 13:22:11,946] INFO - tf.Tensor([[10.  0.]], shape=(1, 2), dtype=float32)
[2019-04-13 13:22:11,947] INFO - END




[2019-04-13 13:22:11,947] INFO - Multihead attention
[2019-04-13 13:22:12,042] INFO - (TensorShape([1, 60, 512]), TensorShape([1, 8, 60, 60]))
[2019-04-13 13:22:12,043] INFO - END




[2019-04-13 13:22:12,043] INFO - Point wise forward network
[2019-04-13 13:22:12,323] INFO - (64, 50, 512)
[2019-04-13 13:22:12,340] INFO - END




[2019-04-13 13:22:12,344] INFO - Dataset Testing
[2019-04-13 13:22:22,808] INFO - start
[2019-04-13 13:22:24,751] INFO - ('using tensorflow: ', '2.0.0-alpha0')
[2019-04-13 13:22:24,752] INFO - Positional Encoding
[2019-04-13 13:22:24,768] INFO - (1, 50, 512)
[2019-04-13 13:22:24,769] INFO - 




[2019-04-13 13:22:24,769] INFO - padding mask
[2019-04-13 13:22:24,770] INFO - tf.Tensor(
[[[[0. 0. 1. 1. 0.]]]


 [[[0. 0. 0. 1. 1.]]]


 [[[1. 1. 1. 0. 0.]]]], shape=(3, 1, 1, 5), dtype=float32)
[2019-04-13 13:22:24,772] INFO - 




[2019-04-13 13:22:24,772] INFO - look aheadmask
[2019-04-13 13:22:24,774] INFO - tf.Tensor(
[[0. 1. 1.]
 [0. 0. 1.]
 [0. 0. 0.]], shape=(3, 3), dtype=float32)
[2019-04-13 13:22:24,776] INFO - 




[2019-04-13 13:22:24,776] INFO - scaled dot product attention
[2019-04-13 13:22:24,778] INFO - Attention weights are:
[2019-04-13 13:22:24,778] INFO - tf.Tensor([[0. 1. 0. 0.]], shape=(1, 4), dtype=float32)
[2019-04-13 13:22:24,779] INFO - Output is:
[2019-04-13 13:22:24,780] INFO - tf.Tensor([[10.  0.]], shape=(1, 2), dtype=float32)
[2019-04-13 13:22:24,781] INFO - END




[2019-04-13 13:22:24,781] INFO - Multihead attention
[2019-04-13 13:22:24,867] INFO - (TensorShape([1, 60, 512]), TensorShape([1, 8, 60, 60]))
[2019-04-13 13:22:24,867] INFO - END




[2019-04-13 13:22:24,867] INFO - Point wise forward network
[2019-04-13 13:22:25,147] INFO - (64, 50, 512)
[2019-04-13 13:22:25,147] INFO - END




[2019-04-13 13:22:25,147] INFO - Dataset Testing
[2019-04-13 13:22:25,257] INFO - SubwordTextEncoder build: trying min_token_count 4
[2019-04-13 13:22:25,310] INFO - SubwordTextEncoder build: trying min_token_count 2
[2019-04-13 13:22:25,360] INFO - SubwordTextEncoder build: trying min_token_count 1
[2019-04-13 13:22:25,432] INFO - SubwordTextEncoder build: trying min_token_count 4
[2019-04-13 13:22:25,467] INFO - SubwordTextEncoder build: trying min_token_count 2
[2019-04-13 13:22:25,506] INFO - SubwordTextEncoder build: trying min_token_count 1
[2019-04-13 13:22:25,611] INFO - Tokenized string is [2, 3, 14, 5, 17, 6, 12, 20, 3, 1, 118]
[2019-04-13 13:22:25,612] INFO - The original string: hola. envíanos un dm para poder ayudarte. saludos.
[2019-04-13 13:22:25,612] INFO - 2 ----> hola
[2019-04-13 13:22:25,612] INFO - 3 ----> . 
[2019-04-13 13:22:25,612] INFO - 14 ----> envíanos 
[2019-04-13 13:22:25,612] INFO - 5 ----> un 
[2019-04-13 13:22:25,612] INFO - 17 ----> dm 
[2019-04-13 13:22:25,612] INFO - 6 ----> para 
[2019-04-13 13:22:25,612] INFO - 12 ----> poder 
[2019-04-13 13:22:25,613] INFO - 20 ----> ayudarte
[2019-04-13 13:22:25,613] INFO - 3 ----> . 
[2019-04-13 13:22:25,613] INFO - 1 ----> saludos
[2019-04-13 13:22:25,613] INFO - 118 ----> .
[2019-04-13 13:25:49,199] INFO - start
[2019-04-13 13:25:51,217] INFO - ('using tensorflow: ', '2.0.0-alpha0')
[2019-04-13 13:25:51,217] INFO - Positional Encoding
[2019-04-13 13:25:51,243] INFO - (1, 50, 512)
[2019-04-13 13:25:51,244] INFO - 




[2019-04-13 13:25:51,244] INFO - padding mask
[2019-04-13 13:25:51,247] INFO - tf.Tensor(
[[[[0. 0. 1. 1. 0.]]]


 [[[0. 0. 0. 1. 1.]]]


 [[[1. 1. 1. 0. 0.]]]], shape=(3, 1, 1, 5), dtype=float32)
[2019-04-13 13:25:51,249] INFO - 




[2019-04-13 13:25:51,250] INFO - look aheadmask
[2019-04-13 13:25:51,251] INFO - tf.Tensor(
[[0. 1. 1.]
 [0. 0. 1.]
 [0. 0. 0.]], shape=(3, 3), dtype=float32)
[2019-04-13 13:25:51,254] INFO - 




[2019-04-13 13:25:51,255] INFO - scaled dot product attention
[2019-04-13 13:25:51,258] INFO - Attention weights are:
[2019-04-13 13:25:51,258] INFO - tf.Tensor([[0. 1. 0. 0.]], shape=(1, 4), dtype=float32)
[2019-04-13 13:25:51,261] INFO - Output is:
[2019-04-13 13:25:51,262] INFO - tf.Tensor([[10.  0.]], shape=(1, 2), dtype=float32)
[2019-04-13 13:25:51,264] INFO - END




[2019-04-13 13:25:51,264] INFO - Multihead attention
[2019-04-13 13:25:51,356] INFO - (TensorShape([1, 60, 512]), TensorShape([1, 8, 60, 60]))
[2019-04-13 13:25:51,356] INFO - END




[2019-04-13 13:25:51,356] INFO - Point wise forward network
[2019-04-13 13:25:51,612] INFO - (64, 50, 512)
[2019-04-13 13:25:51,612] INFO - END




[2019-04-13 13:25:51,615] INFO - Dataset Testing
[2019-04-13 13:25:51,655] INFO - SubwordTextEncoder build: trying min_token_count 4
[2019-04-13 13:25:51,725] INFO - SubwordTextEncoder build: trying min_token_count 2
[2019-04-13 13:25:51,792] INFO - SubwordTextEncoder build: trying min_token_count 1
[2019-04-13 13:25:51,893] INFO - SubwordTextEncoder build: trying min_token_count 3
[2019-04-13 13:25:51,924] INFO - SubwordTextEncoder build: trying min_token_count 1
[2019-04-13 13:26:15,839] INFO - start
[2019-04-13 13:26:17,814] INFO - ('using tensorflow: ', '2.0.0-alpha0')
[2019-04-13 13:26:17,814] INFO - Positional Encoding
[2019-04-13 13:26:17,833] INFO - (1, 50, 512)
[2019-04-13 13:26:17,833] INFO - 




[2019-04-13 13:26:17,833] INFO - padding mask
[2019-04-13 13:26:17,834] INFO - tf.Tensor(
[[[[0. 0. 1. 1. 0.]]]


 [[[0. 0. 0. 1. 1.]]]


 [[[1. 1. 1. 0. 0.]]]], shape=(3, 1, 1, 5), dtype=float32)
[2019-04-13 13:26:17,835] INFO - 




[2019-04-13 13:26:17,836] INFO - look aheadmask
[2019-04-13 13:26:17,837] INFO - tf.Tensor(
[[0. 1. 1.]
 [0. 0. 1.]
 [0. 0. 0.]], shape=(3, 3), dtype=float32)
[2019-04-13 13:26:17,838] INFO - 




[2019-04-13 13:26:17,838] INFO - scaled dot product attention
[2019-04-13 13:26:17,839] INFO - Attention weights are:
[2019-04-13 13:26:17,839] INFO - tf.Tensor([[0. 1. 0. 0.]], shape=(1, 4), dtype=float32)
[2019-04-13 13:26:17,840] INFO - Output is:
[2019-04-13 13:26:17,840] INFO - tf.Tensor([[10.  0.]], shape=(1, 2), dtype=float32)
[2019-04-13 13:26:17,841] INFO - END




[2019-04-13 13:26:17,841] INFO - Multihead attention
[2019-04-13 13:26:17,920] INFO - (TensorShape([1, 60, 512]), TensorShape([1, 8, 60, 60]))
[2019-04-13 13:26:17,920] INFO - END




[2019-04-13 13:26:17,920] INFO - Point wise forward network
[2019-04-13 13:26:18,205] INFO - (64, 50, 512)
[2019-04-13 13:26:18,205] INFO - END




[2019-04-13 13:26:18,208] INFO - Dataset Testing
[2019-04-13 13:26:18,246] INFO - SubwordTextEncoder build: trying min_token_count 4
[2019-04-13 13:26:18,309] INFO - SubwordTextEncoder build: trying min_token_count 2
[2019-04-13 13:26:18,361] INFO - SubwordTextEncoder build: trying min_token_count 1
[2019-04-13 13:26:18,472] INFO - SubwordTextEncoder build: trying min_token_count 3
[2019-04-13 13:26:18,505] INFO - SubwordTextEncoder build: trying min_token_count 1
[2019-04-13 13:26:18,592] INFO - Tokenized string is [13, 25, 2, 37, 73, 54, 66, 84, 43, 65, 64, 20, 72, 151]
[2019-04-13 13:26:18,592] INFO - The original string: hola ximena. somos banco falabella chile. ¿quieres comunicarte con @bcofalabellaco?
[2019-04-13 13:26:18,592] INFO - 13 ----> hola 
[2019-04-13 13:26:18,592] INFO - 25 ----> ximena
[2019-04-13 13:26:18,592] INFO - 2 ----> . 
[2019-04-13 13:26:18,592] INFO - 37 ----> somos 
[2019-04-13 13:26:18,592] INFO - 73 ----> banco 
[2019-04-13 13:26:18,593] INFO - 54 ----> falabella 
[2019-04-13 13:26:18,593] INFO - 66 ----> chile
[2019-04-13 13:26:18,593] INFO - 84 ----> . ¿
[2019-04-13 13:26:18,593] INFO - 43 ----> quieres 
[2019-04-13 13:26:18,593] INFO - 65 ----> comunicarte 
[2019-04-13 13:26:18,593] INFO - 64 ----> con
[2019-04-13 13:26:18,593] INFO - 20 ---->  @
[2019-04-13 13:26:18,593] INFO - 72 ----> bcofalabellaco
[2019-04-13 13:26:18,593] INFO - 151 ----> ?
[2019-04-13 13:26:18,606] INFO - tf.Tensor([344  13  25   2  37  73  54  66  84  43  65  64  20  72 151 345], shape=(16,), dtype=int64)
[2019-04-13 13:26:18,617] INFO - Tokenized string is [40, 65, 8, 91, 9, 52, 107, 46, 83, 12, 66, 12, 2, 207]
[2019-04-13 13:26:18,617] INFO - The original string: sigue fallando el botón de pagos #pse de @falabellayudaco @banco\&undscfalabella
[2019-04-13 13:26:18,617] INFO - 40 ----> sigue 
[2019-04-13 13:26:18,617] INFO - 65 ----> fallando 
[2019-04-13 13:26:18,618] INFO - 8 ----> el 
[2019-04-13 13:26:18,618] INFO - 91 ----> botón 
[2019-04-13 13:26:18,618] INFO - 9 ----> de 
[2019-04-13 13:26:18,618] INFO - 52 ----> pagos
[2019-04-13 13:26:18,618] INFO - 107 ---->  #
[2019-04-13 13:26:18,618] INFO - 46 ----> pse 
[2019-04-13 13:26:18,618] INFO - 83 ----> de
[2019-04-13 13:26:18,618] INFO - 12 ---->  @
[2019-04-13 13:26:18,618] INFO - 66 ----> falabellayudaco
[2019-04-13 13:26:18,618] INFO - 12 ---->  @
[2019-04-13 13:26:18,619] INFO - 2 ----> banco\&undscfalabell
[2019-04-13 13:26:18,619] INFO - 207 ----> a
[2019-04-13 13:26:18,633] INFO - (<tf.Tensor: id=509, shape=(16,), dtype=int64, numpy=
array([366,  40,  65,   8,  91,   9,  52, 107,  46,  83,  12,  66,  12,
         2, 207, 367])>, <tf.Tensor: id=510, shape=(16,), dtype=int64, numpy=
array([344,  13,  25,   2,  37,  73,  54,  66,  84,  43,  65,  64,  20,
        72, 151, 345])>)
[2019-04-13 13:26:18,635] INFO - END




[2019-04-13 13:27:44,032] INFO - start
[2019-04-13 13:27:47,329] INFO - ('using tensorflow: ', '2.0.0-alpha0')
[2019-04-13 13:27:47,329] INFO - Positional Encoding
[2019-04-13 13:27:47,353] INFO - (1, 50, 512)
[2019-04-13 13:27:47,354] INFO - 




[2019-04-13 13:27:47,354] INFO - padding mask
[2019-04-13 13:27:47,356] INFO - tf.Tensor(
[[[[0. 0. 1. 1. 0.]]]


 [[[0. 0. 0. 1. 1.]]]


 [[[1. 1. 1. 0. 0.]]]], shape=(3, 1, 1, 5), dtype=float32)
[2019-04-13 13:27:47,359] INFO - 




[2019-04-13 13:27:47,361] INFO - look aheadmask
[2019-04-13 13:27:47,362] INFO - tf.Tensor(
[[0. 1. 1.]
 [0. 0. 1.]
 [0. 0. 0.]], shape=(3, 3), dtype=float32)
[2019-04-13 13:27:47,363] INFO - 




[2019-04-13 13:27:47,363] INFO - scaled dot product attention
[2019-04-13 13:27:47,366] INFO - Attention weights are:
[2019-04-13 13:27:47,367] INFO - tf.Tensor([[0. 1. 0. 0.]], shape=(1, 4), dtype=float32)
[2019-04-13 13:27:47,368] INFO - Output is:
[2019-04-13 13:27:47,369] INFO - tf.Tensor([[10.  0.]], shape=(1, 2), dtype=float32)
[2019-04-13 13:27:47,369] INFO - END




[2019-04-13 13:27:47,369] INFO - Multihead attention
[2019-04-13 13:27:47,452] INFO - (TensorShape([1, 60, 512]), TensorShape([1, 8, 60, 60]))
[2019-04-13 13:27:47,452] INFO - END




[2019-04-13 13:27:47,452] INFO - Point wise forward network
[2019-04-13 13:27:47,913] INFO - (64, 50, 512)
[2019-04-13 13:27:47,914] INFO - END




[2019-04-13 13:27:47,916] INFO - Dataset Testing
[2019-04-13 13:27:47,984] INFO - SubwordTextEncoder build: trying min_token_count 4
[2019-04-13 13:27:48,068] INFO - SubwordTextEncoder build: trying min_token_count 2
[2019-04-13 13:27:48,168] INFO - SubwordTextEncoder build: trying min_token_count 1
[2019-04-13 13:27:48,312] INFO - SubwordTextEncoder build: trying min_token_count 3
[2019-04-13 13:27:48,358] INFO - SubwordTextEncoder build: trying min_token_count 1
[2019-04-13 13:27:48,457] INFO - Tokenized string is [37, 73, 20, 104, 7, 53, 120, 46, 92, 9, 74, 9, 2, 220]
[2019-04-13 13:27:48,457] INFO - The original string: sigue fallando el botón de pagos #pse de @falabellayudaco @banco\&undscfalabella
[2019-04-13 13:27:48,457] INFO - 37 ----> sigue 
[2019-04-13 13:27:48,457] INFO - 73 ----> fallando 
[2019-04-13 13:27:48,458] INFO - 20 ----> el 
[2019-04-13 13:27:48,458] INFO - 104 ----> botón 
[2019-04-13 13:27:48,458] INFO - 7 ----> de 
[2019-04-13 13:27:48,458] INFO - 53 ----> pagos
[2019-04-13 13:27:48,458] INFO - 120 ---->  #
[2019-04-13 13:27:48,459] INFO - 46 ----> pse 
[2019-04-13 13:27:48,459] INFO - 92 ----> de
[2019-04-13 13:27:48,459] INFO - 9 ---->  @
[2019-04-13 13:27:48,459] INFO - 74 ----> falabellayudaco
[2019-04-13 13:27:48,459] INFO - 9 ---->  @
[2019-04-13 13:27:48,460] INFO - 2 ----> banco\&undscfalabell
[2019-04-13 13:27:48,460] INFO - 220 ----> a
[2019-04-13 13:27:48,481] INFO - (<tf.Tensor: id=427, shape=(16,), dtype=int64, numpy=
array([379,  37,  73,  20, 104,   7,  53, 120,  46,  92,   9,  74,   9,
         2, 220, 380])>, <tf.Tensor: id=428, shape=(16,), dtype=int64, numpy=
array([348,  15,  26,  10,  37,  77,  58,  70,  86,  42,  69,  68,  11,
        76, 155, 349])>)
[2019-04-13 13:27:48,492] INFO - Tokenized string is [15, 26, 10, 37, 77, 58, 70, 86, 42, 69, 68, 11, 76, 155]
[2019-04-13 13:27:48,492] INFO - The original string: hola ximena. somos banco falabella chile. ¿quieres comunicarte con @bcofalabellaco?
[2019-04-13 13:27:48,492] INFO - 15 ----> hola 
[2019-04-13 13:27:48,493] INFO - 26 ----> ximena
[2019-04-13 13:27:48,493] INFO - 10 ----> . 
[2019-04-13 13:27:48,493] INFO - 37 ----> somos 
[2019-04-13 13:27:48,493] INFO - 77 ----> banco 
[2019-04-13 13:27:48,493] INFO - 58 ----> falabella 
[2019-04-13 13:27:48,493] INFO - 70 ----> chile
[2019-04-13 13:27:48,493] INFO - 86 ----> . ¿
[2019-04-13 13:27:48,493] INFO - 42 ----> quieres 
[2019-04-13 13:27:48,494] INFO - 69 ----> comunicarte 
[2019-04-13 13:27:48,494] INFO - 68 ----> con
[2019-04-13 13:27:48,494] INFO - 11 ---->  @
[2019-04-13 13:27:48,494] INFO - 76 ----> bcofalabellaco
[2019-04-13 13:27:48,494] INFO - 155 ----> ?
[2019-04-13 13:27:48,511] INFO - tf.Tensor([348  15  26  10  37  77  58  70  86  42  69  68  11  76 155 349], shape=(16,), dtype=int64)
[2019-04-13 13:27:48,512] INFO - END




[2019-04-13 13:40:56,240] INFO - start
[2019-04-13 13:41:00,759] INFO - ('using tensorflow: ', '2.0.0-alpha0')
[2019-04-13 13:41:00,759] INFO - Positional Encoding
[2019-04-13 13:41:00,798] INFO - (1, 50, 512)
[2019-04-13 13:41:00,798] INFO - 




[2019-04-13 13:41:00,798] INFO - padding mask
[2019-04-13 13:41:00,801] INFO - tf.Tensor(
[[[[0. 0. 1. 1. 0.]]]


 [[[0. 0. 0. 1. 1.]]]


 [[[1. 1. 1. 0. 0.]]]], shape=(3, 1, 1, 5), dtype=float32)
[2019-04-13 13:41:00,803] INFO - 




[2019-04-13 13:41:00,804] INFO - look aheadmask
[2019-04-13 13:41:00,807] INFO - tf.Tensor(
[[0. 1. 1.]
 [0. 0. 1.]
 [0. 0. 0.]], shape=(3, 3), dtype=float32)
[2019-04-13 13:41:00,807] INFO - 




[2019-04-13 13:41:00,808] INFO - scaled dot product attention
[2019-04-13 13:41:00,813] INFO - Attention weights are:
[2019-04-13 13:41:00,814] INFO - tf.Tensor([[0. 1. 0. 0.]], shape=(1, 4), dtype=float32)
[2019-04-13 13:41:00,815] INFO - Output is:
[2019-04-13 13:41:00,815] INFO - tf.Tensor([[10.  0.]], shape=(1, 2), dtype=float32)
[2019-04-13 13:41:00,815] INFO - END




[2019-04-13 13:41:00,815] INFO - Multihead attention
[2019-04-13 13:41:00,902] INFO - (TensorShape([1, 60, 512]), TensorShape([1, 8, 60, 60]))
[2019-04-13 13:41:00,902] INFO - END




[2019-04-13 13:41:00,902] INFO - Point wise forward network
[2019-04-13 13:41:01,272] INFO - (64, 50, 512)
[2019-04-13 13:41:01,273] INFO - END




[2019-04-13 13:41:01,274] INFO - Dataset Testing
[2019-04-13 13:41:01,338] INFO - SubwordTextEncoder build: trying min_token_count 4
[2019-04-13 13:41:01,399] INFO - SubwordTextEncoder build: trying min_token_count 2
[2019-04-13 13:41:01,463] INFO - SubwordTextEncoder build: trying min_token_count 1
[2019-04-13 13:41:01,590] INFO - SubwordTextEncoder build: trying min_token_count 3
[2019-04-13 13:41:01,628] INFO - SubwordTextEncoder build: trying min_token_count 1
[2019-04-13 13:41:01,717] INFO - ######## Source
[2019-04-13 13:41:01,724] INFO - Tokenized string is [36, 67, 8, 98, 9, 50, 116, 43, 86, 4, 68, 4, 2, 216]
[2019-04-13 13:41:01,724] INFO - The original string: sigue fallando el botón de pagos #pse de @falabellayudaco @banco\&undscfalabella
[2019-04-13 13:41:01,724] INFO - 36 ----> sigue 
[2019-04-13 13:41:01,724] INFO - 67 ----> fallando 
[2019-04-13 13:41:01,725] INFO - 8 ----> el 
[2019-04-13 13:41:01,725] INFO - 98 ----> botón 
[2019-04-13 13:41:01,725] INFO - 9 ----> de 
[2019-04-13 13:41:01,725] INFO - 50 ----> pagos
[2019-04-13 13:41:01,725] INFO - 116 ---->  #
[2019-04-13 13:41:01,725] INFO - 43 ----> pse 
[2019-04-13 13:41:01,725] INFO - 86 ----> de
[2019-04-13 13:41:01,725] INFO - 4 ---->  @
[2019-04-13 13:41:01,726] INFO - 68 ----> falabellayudaco
[2019-04-13 13:41:01,726] INFO - 4 ---->  @
[2019-04-13 13:41:01,726] INFO - 2 ----> banco\&undscfalabell
[2019-04-13 13:41:01,726] INFO - 216 ----> a
[2019-04-13 13:41:01,738] INFO - (<tf.Tensor: id=427, shape=(16,), dtype=int64, numpy=
array([375,  36,  67,   8,  98,   9,  50, 116,  43,  86,   4,  68,   4,
         2, 216, 376])>, <tf.Tensor: id=428, shape=(16,), dtype=int64, numpy=
array([334,  44,  25,   2,  31,  64,  48,  59,  74,  34,  58,  57,   9,
        63, 141, 335])>)
[2019-04-13 13:41:01,741] INFO - ######## Target
[2019-04-13 13:41:01,749] INFO - Tokenized string is [44, 25, 2, 31, 64, 48, 59, 74, 34, 58, 57, 9, 63, 141]
[2019-04-13 13:41:01,750] INFO - The original string: hola ximena. somos banco falabella chile. ¿quieres comunicarte con @bcofalabellaco?
[2019-04-13 13:41:01,750] INFO - 44 ----> hola 
[2019-04-13 13:41:01,750] INFO - 25 ----> ximena
[2019-04-13 13:41:01,750] INFO - 2 ----> . 
[2019-04-13 13:41:01,750] INFO - 31 ----> somos 
[2019-04-13 13:41:01,751] INFO - 64 ----> banco 
[2019-04-13 13:41:01,751] INFO - 48 ----> falabella 
[2019-04-13 13:41:01,751] INFO - 59 ----> chile
[2019-04-13 13:41:01,751] INFO - 74 ----> . ¿
[2019-04-13 13:41:01,751] INFO - 34 ----> quieres 
[2019-04-13 13:41:01,751] INFO - 58 ----> comunicarte 
[2019-04-13 13:41:01,751] INFO - 57 ----> con
[2019-04-13 13:41:01,751] INFO - 9 ---->  @
[2019-04-13 13:41:01,752] INFO - 63 ----> bcofalabellaco
[2019-04-13 13:41:01,752] INFO - 141 ----> ?
[2019-04-13 13:41:01,767] INFO - tf.Tensor([334  44  25   2  31  64  48  59  74  34  58  57   9  63 141 335], shape=(16,), dtype=int64)
[2019-04-13 13:41:01,767] INFO - END




[2019-04-13 14:08:55,428] INFO - start
[2019-04-13 14:08:57,509] INFO - ('using tensorflow: ', '2.0.0-alpha0')
[2019-04-13 14:08:57,509] INFO - Positional Encoding
[2019-04-13 14:08:57,530] INFO - (1, 50, 512)
[2019-04-13 14:08:57,530] INFO - 




[2019-04-13 14:08:57,530] INFO - padding mask
[2019-04-13 14:08:57,534] INFO - tf.Tensor(
[[[[0. 0. 1. 1. 0.]]]


 [[[0. 0. 0. 1. 1.]]]


 [[[1. 1. 1. 0. 0.]]]], shape=(3, 1, 1, 5), dtype=float32)
[2019-04-13 14:08:57,536] INFO - 




[2019-04-13 14:08:57,541] INFO - look aheadmask
[2019-04-13 14:08:57,544] INFO - tf.Tensor(
[[0. 1. 1.]
 [0. 0. 1.]
 [0. 0. 0.]], shape=(3, 3), dtype=float32)
[2019-04-13 14:08:57,545] INFO - 




[2019-04-13 14:08:57,545] INFO - scaled dot product attention
[2019-04-13 14:08:57,555] INFO - Attention weights are:
[2019-04-13 14:08:57,555] INFO - tf.Tensor([[0. 1. 0. 0.]], shape=(1, 4), dtype=float32)
[2019-04-13 14:08:57,556] INFO - Output is:
[2019-04-13 14:08:57,556] INFO - tf.Tensor([[10.  0.]], shape=(1, 2), dtype=float32)
[2019-04-13 14:08:57,556] INFO - END




[2019-04-13 14:08:57,556] INFO - Multihead attention
[2019-04-13 14:08:57,640] INFO - (TensorShape([1, 60, 512]), TensorShape([1, 8, 60, 60]))
[2019-04-13 14:08:57,641] INFO - END




[2019-04-13 14:08:57,641] INFO - Point wise forward network
[2019-04-13 14:08:57,900] INFO - (64, 50, 512)
[2019-04-13 14:08:57,900] INFO - END




[2019-04-13 14:08:57,901] INFO - Dataset Testing
[2019-04-13 14:08:57,938] INFO - SubwordTextEncoder build: trying min_token_count 4
[2019-04-13 14:08:57,997] INFO - SubwordTextEncoder build: trying min_token_count 2
[2019-04-13 14:08:58,047] INFO - SubwordTextEncoder build: trying min_token_count 1
[2019-04-13 14:08:58,111] INFO - SubwordTextEncoder build: trying min_token_count 3
[2019-04-13 14:08:58,155] INFO - SubwordTextEncoder build: trying min_token_count 1
[2019-04-13 14:09:13,016] INFO - start
[2019-04-13 14:09:15,030] INFO - ('using tensorflow: ', '2.0.0-alpha0')
[2019-04-13 14:09:15,030] INFO - Positional Encoding
[2019-04-13 14:09:15,050] INFO - (1, 50, 512)
[2019-04-13 14:09:15,051] INFO - 




[2019-04-13 14:09:15,051] INFO - padding mask
[2019-04-13 14:09:15,052] INFO - tf.Tensor(
[[[[0. 0. 1. 1. 0.]]]


 [[[0. 0. 0. 1. 1.]]]


 [[[1. 1. 1. 0. 0.]]]], shape=(3, 1, 1, 5), dtype=float32)
[2019-04-13 14:09:15,055] INFO - 




[2019-04-13 14:09:15,057] INFO - look aheadmask
[2019-04-13 14:09:15,059] INFO - tf.Tensor(
[[0. 1. 1.]
 [0. 0. 1.]
 [0. 0. 0.]], shape=(3, 3), dtype=float32)
[2019-04-13 14:09:15,062] INFO - 




[2019-04-13 14:09:15,062] INFO - scaled dot product attention
[2019-04-13 14:09:15,064] INFO - Attention weights are:
[2019-04-13 14:09:15,064] INFO - tf.Tensor([[0. 1. 0. 0.]], shape=(1, 4), dtype=float32)
[2019-04-13 14:09:15,065] INFO - Output is:
[2019-04-13 14:09:15,065] INFO - tf.Tensor([[10.  0.]], shape=(1, 2), dtype=float32)
[2019-04-13 14:09:15,066] INFO - END




[2019-04-13 14:09:15,066] INFO - Multihead attention
[2019-04-13 14:09:15,149] INFO - (TensorShape([1, 60, 512]), TensorShape([1, 8, 60, 60]))
[2019-04-13 14:09:15,149] INFO - END




[2019-04-13 14:09:15,149] INFO - Point wise forward network
[2019-04-13 14:09:15,425] INFO - (64, 50, 512)
[2019-04-13 14:09:15,426] INFO - END




[2019-04-13 14:09:15,426] INFO - Dataset Testing
[2019-04-13 14:09:15,470] INFO - SubwordTextEncoder build: trying min_token_count 4
[2019-04-13 14:09:15,525] INFO - SubwordTextEncoder build: trying min_token_count 2
[2019-04-13 14:09:15,578] INFO - SubwordTextEncoder build: trying min_token_count 1
[2019-04-13 14:09:15,681] INFO - SubwordTextEncoder build: trying min_token_count 3
[2019-04-13 14:09:15,729] INFO - SubwordTextEncoder build: trying min_token_count 1
[2019-04-13 14:09:15,829] INFO - ######## Source
[2019-04-13 14:09:15,835] INFO - Tokenized string is [37, 64, 9, 88, 10, 49, 101, 42, 79, 6, 65, 6, 2, 201]
[2019-04-13 14:09:15,835] INFO - The original string: sigue fallando el botón de pagos #pse de @falabellayudaco @banco\&undscfalabella
[2019-04-13 14:09:15,835] INFO - 37 ----> sigue 
[2019-04-13 14:09:15,835] INFO - 64 ----> fallando 
[2019-04-13 14:09:15,836] INFO - 9 ----> el 
[2019-04-13 14:09:15,836] INFO - 88 ----> botón 
[2019-04-13 14:09:15,836] INFO - 10 ----> de 
[2019-04-13 14:09:15,836] INFO - 49 ----> pagos
[2019-04-13 14:09:15,836] INFO - 101 ---->  #
[2019-04-13 14:09:15,836] INFO - 42 ----> pse 
[2019-04-13 14:09:15,836] INFO - 79 ----> de
[2019-04-13 14:09:15,836] INFO - 6 ---->  @
[2019-04-13 14:09:15,836] INFO - 65 ----> falabellayudaco
[2019-04-13 14:09:15,836] INFO - 6 ---->  @
[2019-04-13 14:09:15,837] INFO - 2 ----> banco\&undscfalabell
[2019-04-13 14:09:15,837] INFO - 201 ----> a
[2019-04-13 14:09:15,881] INFO - (<tf.Tensor: id=495, shape=(7, 32), dtype=int64, numpy=
array([[360,  90,   6,   2,   1,  22,  57,   4,  85,   8,  21,  43,  54,
         80, 361,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0,   0],
       [360,  37,  64,   9,  88,  10,  49, 101,  42,  79,   6,  65,   6,
          2, 201, 361,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0,   0],
       [360, 168,   2,   1,  60,  84,  53,   5,  63,  93,   7,   8,  18,
         59,  72, 100,  10,  78,  11,  75, 361,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0,   0],
       [360,  20,   6,   2,   1,  87,  74,  12,   1,  15,  19,  14,  30,
          3,  94,   9,  86,  96,  46,   3,  69,   1,  56, 161, 361,   0,
          0,   0,   0,   0,   0,   0],
       [360,  66, 102,   2,   1,  21,  11,  62,   7,  19,  89,  12,  15,
         17,  47, 103, 361,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0,   0],
       [360, 168,   2,   1,  20, 148,  76,  52,  28,  16,   8,  27,  48,
         39,   5,  82,  34,   5,  29,  99,   4,  35,  58, 150,  44,  70,
          1,   4,  31,  83,  95, 361],
       [360, 168,   2,   1,  77,   3,  67,  50,   7,  55,  26,   9,  73,
         36,  45,  71,   5,   4,  91,  97,  81,  38,   4,  33, 167, 361,
          0,   0,   0,   0,   0,   0]])>, <tf.Tensor: id=496, shape=(7, 31), dtype=int64, numpy=
array([[341,  63,  84,  17,  43,  45,  20, 148, 342,   0,   0,   0,   0,
          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0],
       [341,  13,  26,   2,  38,  73,  55,  66,  80,  44,  65,  64,  22,
         72, 148, 342,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0],
       [341,  13,  31,  83,  33,   6,  70,  25,  27,  75,   4,  14,   3,
         15,  50,  60,   9,  29,  62,   8,  19,   4,  49,   5,  53,  30,
         69,  81,   1, 118, 342],
       [341,   7,   2,  15,  11,  58,   5,  12,  20,   2,   1, 131, 342,
          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0],
       [341,  16,   6,  51,  10,  23,  56, 131,   1, 131, 342,   0,   0,
          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0],
       [341,  61,  41,  36,  17,  37,  52, 131, 342,   0,   0,   0,   0,
          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0],
       [341,   7,  22,  24,  35,  16,  11,  59,  82,   1, 118, 342,   0,
          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
          0,   0,   0,   0,   0]])>)
[2019-04-13 14:09:15,891] INFO - ######## Target
[2019-04-13 14:09:15,902] INFO - Tokenized string is [13, 26, 2, 38, 73, 55, 66, 80, 44, 65, 64, 22, 72, 148]
[2019-04-13 14:09:15,902] INFO - The original string: hola ximena. somos banco falabella chile. ¿quieres comunicarte con @bcofalabellaco?
[2019-04-13 14:09:15,902] INFO - 13 ----> hola 
[2019-04-13 14:09:15,902] INFO - 26 ----> ximena
[2019-04-13 14:09:15,902] INFO - 2 ----> . 
[2019-04-13 14:09:15,903] INFO - 38 ----> somos 
[2019-04-13 14:09:15,903] INFO - 73 ----> banco 
[2019-04-13 14:09:15,903] INFO - 55 ----> falabella 
[2019-04-13 14:09:15,903] INFO - 66 ----> chile
[2019-04-13 14:09:15,903] INFO - 80 ----> . ¿
[2019-04-13 14:09:15,903] INFO - 44 ----> quieres 
[2019-04-13 14:09:15,903] INFO - 65 ----> comunicarte 
[2019-04-13 14:09:15,903] INFO - 64 ----> con
[2019-04-13 14:09:15,904] INFO - 22 ---->  @
[2019-04-13 14:09:15,904] INFO - 72 ----> bcofalabellaco
[2019-04-13 14:09:15,904] INFO - 148 ----> ?
[2019-04-13 14:09:15,941] INFO - tf.Tensor(
[[341  63  84  17  43  45  20 148 342   0   0   0   0   0   0   0   0   0
    0   0   0   0   0   0   0   0   0   0   0   0   0]
 [341  13  26   2  38  73  55  66  80  44  65  64  22  72 148 342   0   0
    0   0   0   0   0   0   0   0   0   0   0   0   0]
 [341  13  31  83  33   6  70  25  27  75   4  14   3  15  50  60   9  29
   62   8  19   4  49   5  53  30  69  81   1 118 342]
 [341   7   2  15  11  58   5  12  20   2   1 131 342   0   0   0   0   0
    0   0   0   0   0   0   0   0   0   0   0   0   0]
 [341  16   6  51  10  23  56 131   1 131 342   0   0   0   0   0   0   0
    0   0   0   0   0   0   0   0   0   0   0   0   0]
 [341  61  41  36  17  37  52 131 342   0   0   0   0   0   0   0   0   0
    0   0   0   0   0   0   0   0   0   0   0   0   0]
 [341   7  22  24  35  16  11  59  82   1 118 342   0   0   0   0   0   0
    0   0   0   0   0   0   0   0   0   0   0   0   0]], shape=(7, 31), dtype=int64)
[2019-04-13 14:09:15,944] INFO - END




